/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from 'ethers'
import { Listener, Provider } from 'ethers/providers'
import { Arrayish, BigNumber, BigNumberish, Interface } from 'ethers/utils'
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from '.'

interface ArbSysInterface extends Interface {
  functions: {
    addressTable_addressExists: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    addressTable_compress: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    addressTable_decompress: TypedFunctionDescription<{
      encode([buf, offset]: [Arrayish, BigNumberish]): string
    }>

    addressTable_lookup: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    addressTable_lookupIndex: TypedFunctionDescription<{
      encode([index]: [BigNumberish]): string
    }>

    addressTable_register: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    addressTable_size: TypedFunctionDescription<{ encode([]: []): string }>

    functionTableGet: TypedFunctionDescription<{
      encode([addr, index]: [string, BigNumberish]): string
    }>

    functionTableSize: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    getBlsPublicKey: TypedFunctionDescription<{
      encode([addr]: [string]): string
    }>

    getStorageAt: TypedFunctionDescription<{
      encode([account, index]: [string, BigNumberish]): string
    }>

    getTransactionCount: TypedFunctionDescription<{
      encode([account]: [string]): string
    }>

    registerBlsKey: TypedFunctionDescription<{
      encode([x0, x1, y0, y1]: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ]): string
    }>

    uploadFunctionTable: TypedFunctionDescription<{
      encode([buf]: [Arrayish]): string
    }>

    withdrawERC20: TypedFunctionDescription<{
      encode([dest, amount]: [string, BigNumberish]): string
    }>

    withdrawERC721: TypedFunctionDescription<{
      encode([dest, id]: [string, BigNumberish]): string
    }>

    withdrawEth: TypedFunctionDescription<{ encode([dest]: [string]): string }>
  }

  events: {
    ERC20Withdrawal: TypedEventDescription<{
      encodeTopics([destAddr, tokenAddr, amount]: [
        string | null,
        string | null,
        null
      ]): string[]
    }>

    ERC721Withdrawal: TypedEventDescription<{
      encodeTopics([destAddr, tokenAddr, id]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[]
    }>

    EthWithdrawal: TypedEventDescription<{
      encodeTopics([destAddr, amount]: [string | null, null]): string[]
    }>
  }
}

export class ArbSys extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ArbSys
  attach(addressOrName: string): ArbSys
  deployed(): Promise<ArbSys>

  on(event: EventFilter | string, listener: Listener): ArbSys
  once(event: EventFilter | string, listener: Listener): ArbSys
  addListener(eventName: EventFilter | string, listener: Listener): ArbSys
  removeAllListeners(eventName: EventFilter | string): ArbSys
  removeListener(eventName: any, listener: Listener): ArbSys

  interface: ArbSysInterface

  functions: {
    addressTable_addressExists(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<boolean>

    'addressTable_addressExists(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<boolean>

    addressTable_compress(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<string>

    'addressTable_compress(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<string>

    addressTable_decompress(
      buf: Arrayish,
      offset: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      0: string
      1: BigNumber
    }>

    'addressTable_decompress(bytes,uint256)'(
      buf: Arrayish,
      offset: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      0: string
      1: BigNumber
    }>

    addressTable_lookup(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_lookup(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_lookupIndex(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>

    'addressTable_lookupIndex(uint256)'(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>

    addressTable_register(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'addressTable_register(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    addressTable_size(overrides?: TransactionOverrides): Promise<BigNumber>

    'addressTable_size()'(overrides?: TransactionOverrides): Promise<BigNumber>

    functionTableGet(
      addr: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      0: BigNumber
      1: boolean
      2: BigNumber
    }>

    'functionTableGet(address,uint256)'(
      addr: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      0: BigNumber
      1: boolean
      2: BigNumber
    }>

    functionTableSize(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'functionTableSize(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    getBlsPublicKey(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<{
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
    }>

    'getBlsPublicKey(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<{
      0: BigNumber
      1: BigNumber
      2: BigNumber
      3: BigNumber
    }>

    getStorageAt(
      account: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'getStorageAt(address,uint256)'(
      account: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    getTransactionCount(
      account: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'getTransactionCount(address)'(
      account: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    registerBlsKey(
      x0: BigNumberish,
      x1: BigNumberish,
      y0: BigNumberish,
      y1: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'registerBlsKey(uint256,uint256,uint256,uint256)'(
      x0: BigNumberish,
      x1: BigNumberish,
      y0: BigNumberish,
      y1: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    uploadFunctionTable(
      buf: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'uploadFunctionTable(bytes)'(
      buf: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    withdrawERC20(
      dest: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'withdrawERC20(address,uint256)'(
      dest: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    withdrawERC721(
      dest: string,
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'withdrawERC721(address,uint256)'(
      dest: string,
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    withdrawEth(
      dest: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>

    'withdrawEth(address)'(
      dest: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>
  }

  addressTable_addressExists(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<boolean>

  'addressTable_addressExists(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<boolean>

  addressTable_compress(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<string>

  'addressTable_compress(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<string>

  addressTable_decompress(
    buf: Arrayish,
    offset: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    0: string
    1: BigNumber
  }>

  'addressTable_decompress(bytes,uint256)'(
    buf: Arrayish,
    offset: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    0: string
    1: BigNumber
  }>

  addressTable_lookup(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  'addressTable_lookup(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  addressTable_lookupIndex(
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>

  'addressTable_lookupIndex(uint256)'(
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>

  addressTable_register(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'addressTable_register(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  addressTable_size(overrides?: TransactionOverrides): Promise<BigNumber>

  'addressTable_size()'(overrides?: TransactionOverrides): Promise<BigNumber>

  functionTableGet(
    addr: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    0: BigNumber
    1: boolean
    2: BigNumber
  }>

  'functionTableGet(address,uint256)'(
    addr: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    0: BigNumber
    1: boolean
    2: BigNumber
  }>

  functionTableSize(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  'functionTableSize(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  getBlsPublicKey(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<{
    0: BigNumber
    1: BigNumber
    2: BigNumber
    3: BigNumber
  }>

  'getBlsPublicKey(address)'(
    addr: string,
    overrides?: TransactionOverrides
  ): Promise<{
    0: BigNumber
    1: BigNumber
    2: BigNumber
    3: BigNumber
  }>

  getStorageAt(
    account: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  'getStorageAt(address,uint256)'(
    account: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  getTransactionCount(
    account: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  'getTransactionCount(address)'(
    account: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>

  registerBlsKey(
    x0: BigNumberish,
    x1: BigNumberish,
    y0: BigNumberish,
    y1: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'registerBlsKey(uint256,uint256,uint256,uint256)'(
    x0: BigNumberish,
    x1: BigNumberish,
    y0: BigNumberish,
    y1: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  uploadFunctionTable(
    buf: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'uploadFunctionTable(bytes)'(
    buf: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  withdrawERC20(
    dest: string,
    amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'withdrawERC20(address,uint256)'(
    dest: string,
    amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  withdrawERC721(
    dest: string,
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'withdrawERC721(address,uint256)'(
    dest: string,
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  withdrawEth(
    dest: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  'withdrawEth(address)'(
    dest: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>

  filters: {
    ERC20Withdrawal(
      destAddr: string | null,
      tokenAddr: string | null,
      amount: null
    ): EventFilter

    ERC721Withdrawal(
      destAddr: string | null,
      tokenAddr: string | null,
      id: BigNumberish | null
    ): EventFilter

    EthWithdrawal(destAddr: string | null, amount: null): EventFilter
  }

  estimate: {
    addressTable_addressExists(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_addressExists(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_compress(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_compress(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_decompress(
      buf: Arrayish,
      offset: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_decompress(bytes,uint256)'(
      buf: Arrayish,
      offset: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_lookup(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_lookup(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_lookupIndex(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_lookupIndex(uint256)'(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_register(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'addressTable_register(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    addressTable_size(overrides?: TransactionOverrides): Promise<BigNumber>

    'addressTable_size()'(overrides?: TransactionOverrides): Promise<BigNumber>

    functionTableGet(
      addr: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'functionTableGet(address,uint256)'(
      addr: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    functionTableSize(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'functionTableSize(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    getBlsPublicKey(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'getBlsPublicKey(address)'(
      addr: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    getStorageAt(
      account: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'getStorageAt(address,uint256)'(
      account: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    getTransactionCount(
      account: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'getTransactionCount(address)'(
      account: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    registerBlsKey(
      x0: BigNumberish,
      x1: BigNumberish,
      y0: BigNumberish,
      y1: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'registerBlsKey(uint256,uint256,uint256,uint256)'(
      x0: BigNumberish,
      x1: BigNumberish,
      y0: BigNumberish,
      y1: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    uploadFunctionTable(
      buf: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'uploadFunctionTable(bytes)'(
      buf: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    withdrawERC20(
      dest: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'withdrawERC20(address,uint256)'(
      dest: string,
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    withdrawERC721(
      dest: string,
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'withdrawERC721(address,uint256)'(
      dest: string,
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    withdrawEth(
      dest: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>

    'withdrawEth(address)'(
      dest: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>
  }
}
